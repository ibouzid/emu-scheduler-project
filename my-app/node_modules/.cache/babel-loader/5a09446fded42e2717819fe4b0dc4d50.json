{"ast":null,"code":"import _slicedToArray from \"/Users/izzeddinebouzid/Emu Project/emu-scheduler-project/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/izzeddinebouzid/Emu Project/emu-scheduler-project/my-app/src/Containers/RegisterContainer.js\";\nimport React, { useState, useEffect } from 'react';\nimport RegisterComponent from \"../Components/RegisterComponent\";\n\nfunction RegisterContainer() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        firstName = _useState2[0],\n        setFirstName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lastName = _useState4[0],\n        setLastName = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        email = _useState6[0],\n        setEmail = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        schoolStatus = _useState8[0],\n        setSchoolStatus = _useState8[1];\n\n  const _useState9 = useState(\"false\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        password = _useState10[0],\n        setPassword = _useState10[1];\n\n  const _useState11 = useState(true),\n        _useState12 = _slicedToArray(_useState11, 2),\n        isStudent = _useState12[0],\n        setStatus = _useState12[1];\n\n  const _useState13 = useState([]),\n        _useState14 = _slicedToArray(_useState13, 2),\n        studentCourses = _useState14[0],\n        setStudentCourses = _useState14[1];\n\n  const _useState15 = useState([]),\n        _useState16 = _slicedToArray(_useState15, 2),\n        courses = _useState16[0],\n        setCourses = _useState16[1];\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/courses\").then(response => response.json()).then(data => setCourses(data.data.map(item => ({\n      name: item.name\n    }))));\n  }, []);\n\n  function handleSubmit(event) {\n    let student = {\n      firstName: firstName,\n      lastName: lastName,\n      password: password,\n      email: email,\n      isStudent: isStudent ? \"student\" : \"tutor\",\n      studentCourses: studentCourses,\n      schoolStatus: schoolStatus\n    };\n    console.log(student);\n    event.preventDefault();\n    fetch(\"http://localhost:5000/students\", {\n      method: 'post',\n      body: JSON.stringify(student)\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(data);\n    });\n  }\n\n  function handleChange(event) {\n    if (event.target.name === \"firstName\") {\n      setFirstName(event.target.value);\n    }\n\n    if (event.target.name === \"lastName\") {\n      setLastName(event.target.value);\n    }\n\n    if (event.target.name === \"password\") {\n      setPassword(event.target.value);\n    }\n\n    if (event.target.name === \"email\") {\n      setEmail(event.target.value);\n    }\n\n    if (event.target.name === \"courses\") {\n      setStudentCourses(prevState => [...prevState, {\n        name: event.target.value\n      }]);\n    }\n\n    if (event.target.name === \"schoolStatus\") {\n      setSchoolStatus(event.target.value);\n    }\n  }\n\n  function handleRadioChange(event) {\n    setStatus(!isStudent);\n  }\n\n  return React.createElement(RegisterComponent, {\n    isStudent: isStudent,\n    handleChange: handleChange,\n    handleRadioChange: handleRadioChange,\n    handleSubmit: handleSubmit,\n    courses: courses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  });\n}\n\nexport default RegisterContainer;","map":{"version":3,"sources":["/Users/izzeddinebouzid/Emu Project/emu-scheduler-project/my-app/src/Containers/RegisterContainer.js"],"names":["React","useState","useEffect","RegisterComponent","RegisterContainer","firstName","setFirstName","lastName","setLastName","email","setEmail","schoolStatus","setSchoolStatus","password","setPassword","isStudent","setStatus","studentCourses","setStudentCourses","courses","setCourses","fetch","then","response","json","data","map","item","name","handleSubmit","event","student","console","log","preventDefault","method","body","JSON","stringify","handleChange","target","value","prevState","handleRadioChange"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport RegisterComponent from \"../Components/RegisterComponent\";\n\nfunction RegisterContainer(){\n\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [schoolStatus, setSchoolStatus]  = useState(\"\");\n    const [password, setPassword] = useState(\"false\");\n    const [isStudent, setStatus] = useState(true);\n    const [studentCourses, setStudentCourses] = useState([])\n    const [courses, setCourses] = useState([])\n\n    useEffect(()=> {fetch(\"http://localhost:5000/courses\")\n        .then(response => response.json())\n        .then(data => setCourses(data.data.map(item=>({name:item.name}))))}, []);\n\n    function handleSubmit(event) {\n        let student = {\n            firstName: firstName,\n            lastName: lastName,\n            password: password,\n            email: email,\n            isStudent: (isStudent)?\"student\":\"tutor\",\n            studentCourses: studentCourses,\n            schoolStatus: schoolStatus\n\n\n        };\n        console.log(student);\n        event.preventDefault();\n        fetch(\"http://localhost:5000/students\", {\n            method: 'post',\n            body: JSON.stringify(student)\n        }).then(function(response) {\n            return response.json();\n        }).then(function(data) {\n            console.log(data)\n        });\n\n    }\n    function handleChange(event) {\n        if (event.target.name === \"firstName\") {\n            setFirstName(event.target.value)\n        }\n        if (event.target.name === \"lastName\") {\n            setLastName(event.target.value)\n        }\n        if (event.target.name === \"password\") {\n            setPassword(event.target.value)\n        }\n        if (event.target.name === \"email\") {\n            setEmail(event.target.value)\n        }\n        if (event.target.name === \"courses\") {\n            setStudentCourses(prevState => [...prevState, {name:event.target.value}])\n        }\n        if(event.target.name === \"schoolStatus\"){\n            setSchoolStatus(event.target.value)\n        }\n    }\n    function handleRadioChange(event){\n        setStatus(!isStudent)\n    }\n    return(\n        <RegisterComponent\n        isStudent={isStudent}\n        handleChange ={handleChange}\n        handleRadioChange={handleRadioChange}\n        handleSubmit={handleSubmit}\n        courses={courses}\n        />\n    )\n\n\n}\nexport default RegisterContainer"]},"metadata":{},"sourceType":"module"}